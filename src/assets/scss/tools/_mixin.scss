@mixin inputBase {
  display: block;
  width: 100%;
  border: 1px solid $clr-divider;
  border-radius: $rad-S;
  background-color: $clr-light;
  box-shadow: none;
  transition: border-color $trans-timing $trans-cubic;
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  &.is-error {
    border-color: $clr-error;
  }
}

@mixin inputBaseState {
  &:not(:read-only):not(:disabled) {
    &:hover {
      border-color: shade($clr-0-light, 10%);
    }
  }
  &:read-only {
    background-color: $clr-0-lighter;
  }
}

@mixin inputRadioCheckboxBase {
  position: relative;
  line-height: $line-height-S;
  [type="radio"],
  [type="checkbox"] {
    position: absolute;
    z-index: -1;
    opacity: 0;
    &:disabled + label {
      opacity: 0.5;
      cursor: not-allowed;
      &:before {
        cursor: not-allowed;
      }
    }
    &:not(:checked) + label:hover::before {
      box-shadow: inset 0 0 0 1px shade($clr-0-light, 10%);
    }
  }
  label {
    padding-left: $radioCheckboxSize + 0.8rem;
    font-weight: $font-weight-base;
    &::before {
      position: absolute;
      top: $radioCheckboxTop;
      left: 0;
      display: inline-block;
      width: $radioCheckboxSize;
      height: $radioCheckboxSize;
      margin-right: 0.8rem;
      vertical-align: text-bottom;
      box-shadow: inset 0 0 0 1px $clr-0-light;
      background: $clr-light center no-repeat;
      transition: box-shadow $trans-timing cubic-bezier(0.22, 0.68, 0, 1.71);
      content: "";
    }
  }

  &.is-error {
    label::before {
      box-shadow: inset 0 0 0 1px $clr-error;
    }
  }
}

@mixin title {
  font-weight: $font-weight-bold;
  line-height: $line-height-S;
  text-rendering: optimizeLegibility;
  color: $clr-0-darker;

  &:first-child {
    margin-top: 0;
  }
}

@mixin truncate {
  overflow: hidden !important;
  max-width: 100%;
  white-space: nowrap !important;
  text-overflow: ellipsis !important;
  word-wrap: normal !important;
}

@mixin visually-hidden {
  position: absolute !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px;
  padding: 0 !important;
  border: 0 !important;
}

@mixin buttonReset() {
  font: inherit;
  line-height: inherit;
  padding: 0;
  border: 0;
  background: transparent;
  border-radius: 0;
  cursor: pointer;
  color: inherit;
}

@mixin listReset {
  margin-top: 0;
  margin-bottom: 0;
  padding-left: 0;
  list-style: none;
}

@mixin gridItem($size) {
  .l-grid-item--#{$size}-20 {
    width: calc(20% - #{$gutter-width});
  }

  .l-grid-item--#{$size}-25 {
    width: calc(25% - #{$gutter-width});
  }

  .l-grid-item--#{$size}-33 {
    width: calc(33.333% - #{$gutter-width});
  }

  .l-grid-item--#{$size}-40 {
    width: calc(40% - #{$gutter-width});
  }

  .l-grid-item--#{$size}-50 {
    width: calc(50% - #{$gutter-width});
  }

  .l-grid-item--#{$size}-60 {
    width: calc(60% - #{$gutter-width});
  }

  .l-grid-item--#{$size}-66 {
    width: calc(66.666% - #{$gutter-width});
  }

  .l-grid-item--#{$size}-75 {
    width: calc(75% - #{$gutter-width});
  }

  .l-grid-item--#{$size}-80 {
    width: calc(80% - #{$gutter-width});
  }
}
